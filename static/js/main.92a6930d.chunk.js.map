{"version":3,"sources":["Dice.js","Question.js","Player.js","MadCity.js","index.js"],"names":["Dice","props","state","value","maxValue","Number","isInteger","max","event","target","this","setState","Col","Form","Label","column","name","Control","type","onChange","v","setDice","size","React","PureComponent","Question","Group","children","as","rows","e","handleChange","Player","job","discipline","madness","exhaustion","fight","flight","showDetail","key","Container","fluid","Row","InputGroup","Prepend","Text","placeholder","className","onClick","toggleDetails","Collapse","in","id","MadCity","players","gameEvents","slice","push","playerUpdate","Date","now","console","log","Jumbotron","Button","variant","addPlayer","Badge","length","map","player","i","disabled","rollDices","plaintext","readOnly","join","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92a6930d.chunk.js","sourcesContent":["import React from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\nclass Dice extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value || 0,\n      maxValue: Number.isInteger(this.props.max) ? this.props.max : 3\n    };\n  }\n\n  setDice(event) {\n    if (event.target.value < 0 || event.target.value > this.state.maxValue) {\n      return\n    }\n    this.setState({ value: event.target.value })\n  }\n\n  render() {\n    return (\n      <>\n        <Col>\n          <Form.Label column=\"sm\">{this.props.name}</Form.Label>\n        </Col>\n        <Col>\n          <Form.Control type=\"number\"\n            value={this.state.value}\n            onChange={(v) => { this.setDice(v) }}\n            size=\"sm\" />\n        </Col>\n      </>\n    )\n  }\n}\n\nexport { Dice }\n","import React from 'react';\n\nimport Form from 'react-bootstrap/Form';\n\nclass Question extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    };\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <Form.Group >\n        <Form.Label>{this.props.children}</Form.Label>\n        <Form.Control as=\"textarea\"\n          rows={2}\n          value={this.state.value}\n          onChange={(e) => { this.handleChange(e) }}\n        />\n      </Form.Group>\n    )\n  }\n}\n\nexport { Question }","import React from 'react';\n\nimport { Dice } from './Dice'\nimport { Question } from './Question'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Collapse from 'react-bootstrap/Collapse'\n\nimport './Player.css'\n\n\nclass Player extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: props.name,\n      job: props.job,\n\n      discipline: props.discipline || 3,\n      madness: props.madness || 0,\n      exhaustion: props.exhaustion || 0,\n\n      fight: props.fight || 0,\n      flight: props.flight || 0,\n\n      showDetail: false\n    }\n  }\n\n  toggleDetails() {\n    this.setState({ showDetail: !this.state.showDetail })\n  }\n\n  handleChange(event, key) {\n    this.setState({ [key]: event.target.value });\n    if (this.props.onChange) {\n      this.props.onChange(this)\n    }\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>üè∑</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"text\"\n                value={this.state.name}\n                onChange={(e) => { this.handleChange(e, 'name') }}\n                placeholder=\"My Name is...\" />\n            </InputGroup>\n            <br></br>\n          </Col>\n          <Col>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text>üõ†</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control type=\"text\"\n                value={this.state.job}\n                onChange={(e) => { this.handleChange(e, 'job') }}\n                placeholder=\"and I am...\" />\n            </InputGroup>\n            <br></br>\n          </Col>\n        </Row>\n\n        <Row>\n          <Dice name=\"Discipline\" value={this.state.discipline} />\n          <Dice name=\"Permanent Madness\" value={this.state.madness} />\n          <Dice name=\"Current Exhaustion\" value={this.state.exhaustion} max={6} />\n        </Row>\n\n        <Row>\n          <Dice name=\"Responses Fight?\" value={this.state.fight} />\n          <Dice name=\"or Flight?\" value={this.state.flight} />\n        </Row>\n\n        <Row>\n          <Col>\n            <div\n              className=\"hider\"\n              onClick={() => this.toggleDetails()}\n            >\n              <div className=\"border\" />\n              <p className=\"content\">‚áä</p>\n              <div className=\"border\" />\n            </div>\n\n            <Collapse in={this.state.showDetail}>\n              <div id=\"questions-sheet\">\n                <Question>What‚Äôs been keeping you awake?</Question>\n                <Question>What just happened to you?</Question>\n                <Question>What‚Äôs on the surface?</Question>\n                <Question>What lies beneath?</Question>\n                <Question>What‚Äôs your path?</Question>\n              </div>\n            </Collapse>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport { Player }","\nimport React from 'react';\n\nimport { Player } from './Player'\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\nimport './MadCity.css';\nimport { Row } from 'react-bootstrap';\n\nclass MadCity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      gameEvents: []\n    };\n  }\n\n  addPlayer() {\n    const players = this.state.players.slice();\n    players.push(<Player onChange={() => this.playerUpdate()} />);\n    this.setState({ players });\n  }\n\n\n  rollDices() {\n    const gameEvents = this.state.gameEvents.slice();\n    gameEvents.push('Demo ' + Date.now());\n    this.setState({ gameEvents });\n  }\n\n  playerUpdate() {\n    console.log('the player has been updated');\n  }\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid>\n          <Container>\n            <h3>Don&apos;t rest your head</h3>\n            <Row>\n              <Col>\n                <Button variant=\"primary\"\n                  onClick={() => this.addPlayer()}\n                >\n                  Add Player <Badge variant=\"light\">{this.state.players.length}</Badge>\n                </Button>\n              </Col>\n              <Col>\n                <Form.Control as=\"select\">\n                  {this.state.players.map((player, i) => {\n                    // TODO how to update the player name?\n                    return (<option key={i}>{player.name || `Player ${i + 1}`}</option>)\n                  })}\n                </Form.Control>\n              </Col>\n              <Col>\n                <Button variant=\"success\"\n                  disabled={this.state.players.length === 0}\n                  onClick={() => this.rollDices()}\n                >\n                  Roll Dices\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Control as=\"textarea\"\n                  rows={3}\n                  plaintext\n                  readOnly\n                  value={this.state.gameEvents.join('\\n')}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </Jumbotron>\n\n        {this.state.players}\n      </>\n    );\n  }\n}\n\nexport { MadCity as App }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './MadCity';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}