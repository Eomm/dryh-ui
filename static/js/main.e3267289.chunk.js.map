{"version":3,"sources":["Dice.js","Question.js","Player.js","MadCity.js","index.js"],"names":["Dice","props","state","minValue","Number","isInteger","min","maxValue","max","inc","this","setDice","target","value","event","onChange","console","log","Form","Label","column","name","InputGroup","className","Prepend","Button","size","onClick","add","disabled","variant","Control","type","v","Append","React","PureComponent","Question","setState","Group","children","as","rows","e","handleChange","Player","job","discipline","madness","exhaustion","madnessExtra","fight","flight","showDetail","key","rolled","map","diceColor","dices","results","1","2","3","4","5","6","Math","floor","random","roll","winning","reduce","a","b","dominance","getDominance","out","length","player","text","Card","Header","Container","fluid","Row","Col","Text","placeholder","Body","xs","lg","md","rollDices","Footer","toggleDetails","Collapse","in","id","poolA","poolB","i","MadCity","players","gameEvents","slice","push","evt","playerUpdate","message","Jumbotron","href","addPlayer","Badge","plaintext","readOnly","join","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3267289.chunk.js","sourcesContent":["import React from 'react';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\n\nclass Dice extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minValue: Number.isInteger(this.props.min) ? this.props.min : 0,\n      maxValue: Number.isInteger(this.props.max) ? this.props.max : 3\n    };\n  }\n\n  add(inc) {\n    this.setDice({ target: { value: this.props.value + inc } })\n  }\n\n  setDice(event) {\n    if (event.target.value < this.state.minValue\n      || event.target.value > this.state.maxValue) {\n      return\n    }\n\n    if (this.props.onChange) {\n      console.log(event);\n      this.props.onChange(event)\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form.Label column=\"sm\">{this.props.name}</Form.Label>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <Button size=\"sm\" onClick={() => { this.add(-1) }}\n              disabled={this.props.value === this.state.minValue}\n              variant=\"secondary\">➖</Button>\n          </InputGroup.Prepend>\n          <Form.Control type=\"number\"\n            value={this.props.value}\n            onChange={(v) => { this.setDice(v) }}\n            size=\"sm\" />\n          <InputGroup.Append>\n            <Button size=\"sm\" onClick={() => { this.add(1) }}\n              disabled={this.props.value === this.state.maxValue}\n              variant=\"primary\">➕</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </>\n    )\n  }\n}\n\nexport { Dice }\n","import React from 'react';\n\nimport Form from 'react-bootstrap/Form';\n\nclass Question extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <Form.Group >\n        <Form.Label>{this.props.children}</Form.Label>\n        <Form.Control as=\"textarea\"\n          rows={2}\n          value={this.state.value}\n          onChange={(e) => { this.handleChange(e) }}\n        />\n      </Form.Group>\n    )\n  }\n}\n\nexport { Question }","import React from 'react';\n\nimport { Dice } from './Dice'\nimport { Question } from './Question'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Collapse from 'react-bootstrap/Collapse'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nimport './Player.css'\n\n\nclass Player extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: props.name || '',\n      job: props.job,\n\n      discipline: props.discipline || 3,\n      madness: props.madness || 0,\n      exhaustion: props.exhaustion || 0,\n      madnessExtra: 1,\n\n      fight: props.fight || 0,\n      flight: props.flight || 0,\n\n      showDetail: false\n    }\n  }\n\n  toggleDetails() {\n    this.setState({ showDetail: !this.state.showDetail })\n  }\n\n  handleChange(event, key) {\n    this.setState({ [key]: event.target.value });\n  }\n\n  rollDices() {\n    const rolled = ['discipline',\n      'madness',\n      'exhaustion',\n      'madnessExtra',\n    ].map(diceColor => {\n      let dices = this.state[diceColor]\n      const results = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0 }\n      while (dices > 0) {\n        const random = randomD6()\n        results[random]++\n        dices--\n      }\n      return { diceColor, roll: results }\n    })\n\n    // Every six-sided die that shows a 1, 2, or 3 is counted as one success\n    const winning = rolled\n      .map(({ roll }) => roll[1] + roll[2] + roll[3])\n      .reduce((a, b) => a + b)\n\n    // If all numbers between two pools are equal, then \n    // use this guideline: Discipline beats Madness; Madness beats Exhaustion; \n    // Exhaustion beats Pain.\n    const dominance = rolled.reduce(getDominance).diceColor\n\n    if (this.props.onChange) {\n      const out = `Rolled ${rolled.length} dices, ${winning} success. ${dominance} is dominant`\n      this.props.onChange({\n        player: this.state.name,\n        text: out\n      })\n    }\n  }\n\n\n  render() {\n    return (\n      <Card className=\"mainBox\">\n        <Card.Header as=\"h5\">\n          <Container fluid>\n            <Row>\n              <Col>\n                <InputGroup size=\"sm\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>🏷</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control type=\"text\"\n                    value={this.state.name}\n                    onChange={(e) => { this.handleChange(e, 'name') }}\n                    placeholder=\"My Name is...\" />\n                </InputGroup>\n              </Col>\n              <Col>\n                <InputGroup size=\"sm\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>🛠</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control type=\"text\"\n                    value={this.state.job}\n                    onChange={(e) => { this.handleChange(e, 'job') }}\n                    placeholder=\"and I am...\" />\n                </InputGroup>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Header>\n        <Card.Body className=\"pl-0 pr-0 pb-2 pt-2\">\n          <Container fluid>\n            <Row>\n              <Col xs lg=\"2\">\n                <Dice name=\"Discipline\" value={this.state.discipline}\n                  onChange={(e) => { this.handleChange(e, 'discipline') }} />\n              </Col>\n              <Col xs lg=\"2\">\n                <Dice name=\"Permanent Madness\" value={this.state.madness}\n                  onChange={(e) => { this.handleChange(e, 'madness') }} />\n              </Col>\n              <Col xs lg=\"2\">\n                <Dice name=\"Madness\" value={this.state.madnessExtra} min={1} max={6}\n                  onChange={(e) => { this.handleChange(e, 'madnessExtra') }} />\n              </Col>\n              <Col xs lg=\"2\">\n                <Dice name=\"Current Exhaustion\" value={this.state.exhaustion} max={6}\n                  onChange={(e) => { this.handleChange(e, 'exhaustion') }} />\n              </Col>\n              <Col xs lg=\"3\">\n                <Dice name=\"Responses Fight?\" value={this.state.fight}\n                  onChange={(e) => { this.handleChange(e, 'fight') }} />\n              </Col>\n              <Col xs lg=\"3\">\n                <Dice name=\"or Flight?\" value={this.state.flight}\n                  onChange={(e) => { this.handleChange(e, 'flight') }} />\n              </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              <Col md=\"auto\">\n                <Button size=\"sm\" onClick={() => this.rollDices()}\n                  variant=\"outline-primary\">Roll 🎲</Button>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        <Card.Footer className=\"text-muted\">\n          <div\n            className=\"hider\"\n            onClick={() => this.toggleDetails()}\n          >\n            <div className=\"border\" />\n            <p className=\"content\">⇊</p>\n            <div className=\"border\" />\n          </div>\n\n          <Collapse in={this.state.showDetail}>\n            <div id=\"questions-sheet\">\n              <Question><b>Exhaustion Talent MINOR</b></Question>\n              <Question><b>Exhaustion Talent MAJOR</b></Question>\n              <Question><b>Madness Talent</b></Question>\n              <Question>What’s been keeping you awake?</Question>\n              <Question>What just happened to you?</Question>\n              <Question>What’s on the surface?</Question>\n              <Question>What lies beneath?</Question>\n              <Question>What’s your path?</Question>\n            </div>\n          </Collapse>\n\n        </Card.Footer>\n      </Card>\n\n\n\n    );\n  }\n}\n\nfunction getDominance(poolA, poolB) {\n  for (let i = 6; i > 0; i--) {\n    if (poolA.roll[i] > poolB.roll[i]) {\n      return poolA\n    } else if (poolA.roll[i] < poolB.roll[i]) {\n      return poolB\n    }\n  }\n  return poolA\n}\n\n\nfunction randomD6() {\n  return Math.floor(Math.random() * 6) + 1\n}\n\nexport { Player }\n","\nimport React from 'react';\n\nimport { Player } from './Player'\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\nimport './MadCity.css';\nimport { Row } from 'react-bootstrap';\n\nclass MadCity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      gameEvents: []\n    };\n  }\n\n  addPlayer() {\n    const players = this.state.players.slice();\n    players.push(<Player onChange={(evt) => this.playerUpdate('Player ' + players.length, evt)} />);\n    this.setState({ players });\n  }\n\n\n  playerUpdate(player, message) {\n    const gameEvents = this.state.gameEvents.slice();\n    gameEvents.push(`${message.player || player}: ${message.text}`);\n    this.setState({ gameEvents });\n  }\n\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid>\n          <Container>\n            <h3>Don&apos;t rest your head</h3>\n            <p>This is a dashboard to ease the <a href=\"https://en.wikipedia.org/wiki/Don%27t_Rest_Your_Head\">role-playing game sessions</a></p>\n            <Row>\n              <Col>\n                <Button variant=\"primary\"\n                  onClick={() => this.addPlayer()}\n                >\n                  Add Player <Badge variant=\"light\">{this.state.players.length}</Badge>\n                </Button>\n              </Col>\n              <Col>\n                <Form.Control as=\"select\">\n                  {this.state.players.map((player, i) => {\n                    // TODO how to update the player name?\n                    return (<option key={i}>{player.name || `Player ${i + 1}`}</option>)\n                  })}\n                </Form.Control>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Control as=\"textarea\"\n                  rows={3}\n                  plaintext\n                  readOnly\n                  value={this.state.gameEvents.join('\\n')}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </Jumbotron>\n\n        {this.state.players}\n      </>\n    );\n  }\n}\n\nexport { MadCity as App }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './MadCity';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}